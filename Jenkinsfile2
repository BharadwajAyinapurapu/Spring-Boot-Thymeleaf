@Library('Shared-Libraries@main') _

pipeline{
  agent any
	environment{
	    ARTIFACTORY_ACCESS_TOKEN = credentials('artifactory-access-token')
	    DOCKER_ACCESS_TOKEN = credentials('docker-access-token')
	}
	tools {
            maven 'Maven'
  	}
	
	stages{
	
	    stage('Fetch code from GitHub'){
	  	agent {
	   	   label 'agent-1'
		  }
		  steps{
            		script{
				fetchCode.fetchCode()
			}
		  }
	    }
	    
	    stage('Maven Build'){
	    	agent {
	      	   label 'agent-1'
	      	}
    		steps{
    			script{
    				maven.mavenTest()
    				maven.mavenInstall()
    			}
    		}
    		post{
        	    success{
           		archiveArtifacts 'target/*.war'
           		stash 'source'
    		    }
            	}
	    }
	    
	    stage('Code Quality Check'){
		agent{
		   label 'agent-1'
		}
		steps{
	    	 withSonarQubeEnv(installationName: 'sonarqube-7.1'){
    			 script{
    			     sonarQube.sonarAnalysis('spring','spring','http://20.244.33.251:9000','9fe0b448d589e6dde9f405e50ed8448f012f09f5')
    			 }
		    }   
		}
	    }

	    
	    /*stage('Custom Quality Gate Check'){
	        agent{
	            label 'agent-1'
	        }
	        steps{
	            waitForQualityGate abortPipeline: true
	        }
	    }*/
	    
 
	    stage('Publish to JFrog'){
	        agent{
	            label 'agent-1'
	        }
	        steps{
	            script{
    	            jfrog.jfPing('http://20.244.50.64:8082/artifactory/')
    	            jfrog.jfUpload('http://20.244.50.64:8082/artifactory/','${ARTIFACTORY_ACCESS_TOKEN}','target/spring-boot-thymeleaf-2.0.0.war','Spring-Boot-Thymeleaf/')
	            }           
	        }
	    } 
	    
	    stage('Tomcat deploy'){
		agent {
		   label 'agent-1'
		}
		steps{
		   ansiblePlaybook becomeUser: 'bd', credentialsId: 'SSH-Private-key', disableHostKeyChecking: true, installation: 'ansible', inventory: 'inventory', playbook: 'playbook.yml'
		}
	     }
	    
	    stage('Docker Stage'){
	       agent{
	           label 'agent-1'
	       }
	       steps{
	           script{
    	           docker.dockerBuild("bharadwajayinapurapu/spring-boot-thymeleaf:V.$BUILD_NUMBER")
    	           sh 'echo $DOCKER_ACCESS_TOKEN_PSW | docker login --username $DOCKER_ACCESS_TOKEN_USR --password-stdin'
    	           docker.dockerPush("bharadwajayinapurapu/spring-boot-thymeleaf:V.$BUILD_NUMBER")
	           }
	       }
	   }
	   
	   stage('K8S Deploy'){
	       agent{
	           label 'agent-2'
	       }
	       steps{
	           sh 'chmod +x changeTag.sh'
	           sh './changeTag.sh V.$BUILD_NUMBER'
	           script{
	               kubernetes.apply("YAML.yml")
	               kubernetes.get("deployment")
	               kubernetes.get("svc")
	           }
	            /*script{
		            kubernetesDeploy(
			            configs: 'YAML.yml',
			            kubeconfigId: 'K8S' 
			    )
		      }*/
	       }
	   }
	}
	post{	
	    always{
	        sh 'docker logout'
	    }
	}
}
